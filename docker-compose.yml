version: '3.8'

services:
  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      - VITE_API_URL=${VITE_API_URL}
      - VITE_ENV=${VITE_ENV}
    develop:
      watch:
        - action: sync
          path: ./frontend/src
          target: /app/src
          ignore:
            - node_modules/
        - action: sync
          path: ./frontend/public
          target: /app/public
        - action: rebuild
          path: ./frontend/package.json
    depends_on:
      - backend
    networks:
      - broken-logistics

  # Node.js Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "${PORT}:${PORT}"
    env_file:
      - .env
    environment:
      - NODE_ENV=${NODE_ENV}
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@db:${DB_PORT}/${DB_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - PORT=${PORT}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL}
      - OPENAI_MAX_TOKENS=${OPENAI_MAX_TOKENS}
      - OPENAI_TEMPERATURE=${OPENAI_TEMPERATURE}
    develop:
      watch:
        - action: sync
          path: ./backend/src
          target: /app/src
          ignore:
            - node_modules/
        - action: rebuild
          path: ./backend/package.json
    depends_on:
      - db
    networks:
      - broken-logistics

  # PostgreSQL Database
  db:
    image: postgres:15
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - broken-logistics

  # pgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4
    env_file:
      - .env
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    ports:
      - "8080:80"
    depends_on:
      - db
    networks:
      - broken-logistics

volumes:
  postgres_data:

networks:
  broken-logistics:
    driver: bridge 
