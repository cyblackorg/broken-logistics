version: '3.8'

services:
  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:5000
      - REACT_APP_ENV=development
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - broken-logistics

  # Node.js Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:vulnerable_password@db:5432/brokenlogistics
      - JWT_SECRET=super_weak_secret_123
      - PORT=5000
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - db
    networks:
      - broken-logistics

  # PostgreSQL Database
  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=brokenlogistics
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=vulnerable_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - broken-logistics

  # pgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@brokenlogistics.com
      - PGADMIN_DEFAULT_PASSWORD=admin123
    ports:
      - "8080:80"
    depends_on:
      - db
    networks:
      - broken-logistics

volumes:
  postgres_data:

networks:
  broken-logistics:
    driver: bridge 