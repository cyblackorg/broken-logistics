{
  "name": "broken-logistics-backend",
  "version": "1.0.0",
  "description": "Backend API for BrokenLogistics - Intentionally vulnerable logistics application",
  "main": "dist/server.js",
  "scripts": {
    "start": "node dist/server.js",
    "dev": "nodemon src/server.ts",
    "build": "tsc",
    "build:watch": "tsc --watch",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "lint": "eslint src/ --ext .ts",
    "lint:fix": "eslint src/ --ext .ts --fix",
    "format": "prettier --write src/**/*.ts",
    "seed": "npm run build && node dist/scripts/seed.js",
    "db:migrate": "npm run build && node dist/scripts/migrate.js",
    "docs:generate": "swagger-jsdoc -d swaggerDef.js src/routes/*.ts -o docs/swagger.json && swagger-ui-dist",
    "security:audit": "npm audit --audit-level moderate",
    "vulnerability:test": "npm run build && node dist/scripts/testVulnerabilities.js"
  },
  "dependencies": {
    "axios": "^1.2.2",
    "bcryptjs": "^2.4.3",
    "compression": "^1.7.4",
    "cookie-parser": "^1.4.6",
    "cors": "^2.8.5",
    "dotenv": "^16.0.3",
    "express": "^4.18.2",
    "express-rate-limit": "^6.6.0",
    "express-validator": "^6.14.2",
    "helmet": "^6.0.1",
    "joi": "^17.7.0",
    "jsonwebtoken": "^9.0.0",
    "lodash": "^4.17.21",
    "moment": "^2.29.4",
    "morgan": "^1.10.0",
    "multer": "^1.4.5-lts.1",
    "nodemailer": "^6.8.0",
    "openai": "^5.10.2",
    "pg": "^8.8.0",
    "qs": "^6.11.0",
    "sequelize": "^6.28.0",
    "swagger-jsdoc": "^6.2.5",
    "swagger-ui-express": "^4.6.0",
    "uuid": "^9.0.0",
    "winston": "^3.8.2",
    "xml2js": "^0.4.23"
  },
  "devDependencies": {
    "@types/bcryptjs": "^2.4.2",
    "@types/compression": "^1.7.2",
    "@types/cookie-parser": "^1.4.3",
    "@types/cors": "^2.8.13",
    "@types/express": "^4.17.15",
    "@types/jest": "^29.2.5",
    "@types/jsonwebtoken": "^9.0.1",
    "@types/lodash": "^4.14.191",
    "@types/morgan": "^1.9.3",
    "@types/multer": "^1.4.7",
    "@types/node": "^18.11.18",
    "@types/nodemailer": "^6.4.6",
    "@types/pg": "^8.6.5",
    "@types/qs": "^6.9.7",
    "@types/supertest": "^2.0.12",
    "@types/swagger-jsdoc": "^6.0.1",
    "@types/swagger-ui-express": "^4.1.3",
    "@types/uuid": "^9.0.0",
    "@types/xml2js": "^0.4.11",
    "@typescript-eslint/eslint-plugin": "^5.48.1",
    "@typescript-eslint/parser": "^5.48.1",
    "eslint": "^8.31.0",
    "jest": "^29.3.1",
    "nodemon": "^2.0.20",
    "prettier": "^2.8.2",
    "supertest": "^6.3.3",
    "ts-jest": "^29.0.3",
    "ts-node": "^10.9.1",
    "typescript": "^4.9.4"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "keywords": [
    "nodejs",
    "express",
    "typescript",
    "api",
    "logistics",
    "security",
    "vulnerable",
    "education"
  ],
  "author": "BrokenLogistics Team",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/your-org/broken-logistics.git",
    "directory": "backend"
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "roots": [
      "<rootDir>/src"
    ],
    "testMatch": [
      "**/__tests__/**/*.ts",
      "**/?(*.)+(spec|test).ts"
    ],
    "collectCoverageFrom": [
      "src/**/*.ts",
      "!src/**/*.d.ts",
      "!src/server.ts"
    ]
  },
  "nodemonConfig": {
    "watch": [
      "src"
    ],
    "ext": "ts",
    "ignore": [
      "dist",
      "node_modules"
    ],
    "exec": "ts-node src/server.ts"
  },
  "vulnerabilities": {
    "intentional": [
      "SQL Injection via direct query concatenation",
      "XSS via unescaped user input",
      "Weak JWT secret and algorithm",
      "Plain text password storage",
      "Missing input validation",
      "IDOR via predictable resource IDs",
      "XXE via unsafe XML parsing",
      "Insecure file upload handling",
      "Verbose error messages",
      "Missing rate limiting on sensitive endpoints"
    ],
    "packages": {
      "xml2js": "Vulnerable to XXE attacks",
      "moment": "Known security issues in older versions",
      "lodash": "Prototype pollution vulnerabilities",
      "qs": "Prototype pollution in query parsing"
    }
  }
}
